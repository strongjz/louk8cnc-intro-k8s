<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ingress on Introduction to Kubernetes</title>
    <link>https://strongjz.github.io/louk8cnc-intro-k8s/kubernetes/objects/ingress/</link>
    <description>Recent content in ingress on Introduction to Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Dec 2018 17:05:14 -0500</lastBuildDate>
    
	<atom:link href="https://strongjz.github.io/louk8cnc-intro-k8s/kubernetes/objects/ingress/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ingress Controllers</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/kubernetes/objects/ingress/controller/</link>
      <pubDate>Sun, 09 Dec 2018 17:05:14 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/kubernetes/objects/ingress/controller/</guid>
      <description>Ingress controllers In order for the ingress resource to work, the cluster must have an ingress controller running. This is unlike other types of controllers, which run as part of the kube-controller-manager binary, and are typically started automatically with a cluster. Choose the ingress controller implementation that best fits your cluster.
Ingress Controller
apiVersion: extensions/v1beta1 kind: Ingress metadata: name: test-ingress spec: backend: serviceName: testsvc servicePort: 80  Kubernetes supported Ingress Controllers:</description>
    </item>
    
    <item>
      <title>Ingress Rules</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/kubernetes/objects/ingress/rules/</link>
      <pubDate>Sun, 09 Dec 2018 17:05:14 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/kubernetes/objects/ingress/rules/</guid>
      <description>Each http rule contains the following information:
 Host list of paths Backend service  Ingress Rule
apiVersion: extensions/v1beta1 kind: Ingress metadata: name: simple-fanout-example annotations: nginx.ingress.kubernetes.io/rewrite-target: / spec: rules: - host: foo.bar.com http: paths: - path: /foo backend: serviceName: service1 servicePort: 4200 - path: /bar backend: serviceName: service2 servicePort: 8080  </description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on Introduction to Kubernetes</title>
    <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/</link>
    <description>Recent content in Introduction on Introduction to Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 09 Dec 2018 14:15:48 -0500</lastBuildDate>
    
	<atom:link href="https://strongjz.github.io/louk8cnc-intro-k8s/home/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/15_whoami/</link>
      <pubDate>Sun, 09 Dec 2018 14:25:28 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/15_whoami/</guid>
      <description>whoami James Strong
Technical Principal @ Contino
Certified Kubernetes Admin
@strongjz
https://jamesstrong.dev</description>
    </item>
    
    <item>
      <title>Contino</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/20_contino/</link>
      <pubDate>Sun, 09 Dec 2018 16:59:09 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/20_contino/</guid>
      <description> Contino </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/25_agenda/</link>
      <pubDate>Sun, 09 Dec 2018 16:59:28 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/25_agenda/</guid>
      <description> Agenda Introduction  Presenter Contino Agenda  Containers  Intro History Primitives Docker Network Storage   Kubernetes  History Community CNCF Graduated Projects CNCF Incubating Projects
 Get Involved  Kubernetes Objects  Namespaces Pods Resource Quotas Controllers Storage Secrets ConfigMaps Ingress Service Healthchecks  Extras  Options for Running Kubernetes Monitoring Security  </description>
    </item>
    
    <item>
      <title>Beginning</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/101_history/</link>
      <pubDate>Sun, 09 Dec 2018 17:20:59 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/101_history/</guid>
      <description> History In the beginning </description>
    </item>
    
    <item>
      <title>Hypervisor</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/102_hyper/</link>
      <pubDate>Sun, 09 Dec 2018 17:20:59 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/102_hyper/</guid>
      <description> The Hypervisor </description>
    </item>
    
    <item>
      <title>Containers</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/103_containers/</link>
      <pubDate>Sun, 09 Dec 2018 17:20:59 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/103_containers/</guid>
      <description> Containers </description>
    </item>
    
    <item>
      <title>Layers</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/104_layers/</link>
      <pubDate>Sun, 09 Dec 2018 17:20:59 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/104_layers/</guid>
      <description> Container Layers </description>
    </item>
    
    <item>
      <title>Primitives</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/105_primitives/</link>
      <pubDate>Sun, 09 Dec 2018 17:21:13 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/105_primitives/</guid>
      <description> Container Primitives Control Groups Abbreviated cgroups, is a Linux kernel feature that limits, accounts for, and isolates the resource usage
 CPU memory disk I/O network  Namespaces A feature of the Linux kernel that isolate and virtualize system resources of a collection of processes. Examples of resources that can be virtualized include:
 process IDs hostnames user IDs network access interprocess communication filesystems  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/200_docker/</link>
      <pubDate>Sun, 09 Dec 2018 17:21:05 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/200_docker/</guid>
      <description> Docker </description>
    </item>
    
    <item>
      <title>Benefits of Docker</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/201_benefits/</link>
      <pubDate>Sun, 09 Dec 2018 17:21:05 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/201_benefits/</guid>
      <description> Docker Benefits  Separation of concerns Developers focus on building their apps System admins focus on deployment Fast development cycle Application portability Build in one environment, ship to another Scalability Easily spin up new containers if needed Run more apps on one host machine  </description>
    </item>
    
    <item>
      <title>Docker Platform</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/202_platform/</link>
      <pubDate>Sun, 09 Dec 2018 17:21:05 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/202_platform/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Dockerfile</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/203_dockerfile/</link>
      <pubDate>Sun, 09 Dec 2018 17:21:05 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/203_dockerfile/</guid>
      <description>Dockerfile  Instructions specify what to do when building the image FROM instruction specifies what the base image should be RUN instruction specifies a command to execute Comments start with “#” Remember, each line in a Dockerfile creates a new layer if it changes the state of the image You need to find the right balance between having lots of layers created for the image and readability of the Dockerfile Don’t install unnecessary packages One ENTRYPOINT per Dockerfile Combine similar commands into one by using “&amp;amp;&amp;amp;” and “\”</description>
    </item>
    
    <item>
      <title>CLI</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/205_cli/</link>
      <pubDate>Sun, 09 Dec 2018 17:21:05 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/205_cli/</guid>
      <description>Docker cli  docker ps docker images docker logs docker exec  Official Documentation
More exercises</description>
    </item>
    
    <item>
      <title>Kubernetes</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/300_kubernetes/</link>
      <pubDate>Sun, 09 Dec 2018 14:16:03 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/300_kubernetes/</guid>
      <description> Kubernetes </description>
    </item>
    
    <item>
      <title>History</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/301_k8_history/</link>
      <pubDate>Sun, 09 Dec 2018 17:00:31 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/301_k8_history/</guid>
      <description>Kubernetes History Kubernetes is an open-source system for automating deployment, scaling, and management of containerized applications.
 Kubernetes is heavily influenced by Google’s Borg system Released in 2015 when Google partnered with Linux foundation to form CNCF Often called K8s which is a Numeronym K[ubernete]s → K[8]s → K8s Kubernetes - Greek for helmsman or pilot  “Kubernetes was built to radically change the way that applications are built and deployed in the cloud.</description>
    </item>
    
    <item>
      <title>Community</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/310_k8_community/</link>
      <pubDate>Sun, 09 Dec 2018 17:00:43 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/310_k8_community/</guid>
      <description> CNCF Landscape Involvement  Sigs https://github.com/kubernetes/community/blob/master/sig-list.md
 Stackoverflow https://stackoverflow.com/questions/tagged/kubernetes
 Slack
 k8 http://slack.k8s.io/ CNCF https://slack.cncf.io/   </description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/315_k8_arch/</link>
      <pubDate>Sun, 09 Dec 2018 17:00:54 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/315_k8_arch/</guid>
      <description>High level Architecture Master Node Master Node  API data store: Etcd (Cluster State)
 Controller Managers :
 Node Controller Deployment Controller ReplicaSet Controller Replication Controller Endpoints Controller Service Account &amp;amp; Token Controller   Scheduler: Bind pod to Node
  Worker Node Worker Node  Kubelet:
 cAdvisor (metrics, logs&amp;hellip;)  Container Runtime:
 docker containerd  Pod:
 Container (one or more)  Kube-proxy:
 Used to reach services and allow communication between Nodes.</description>
    </item>
    
    <item>
      <title>Objects</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/400_k8_objects/</link>
      <pubDate>Sun, 09 Dec 2018 17:00:31 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/400_k8_objects/</guid>
      <description> Kubernetes API Objects  Namespaces Pods Resource Quotas Controllers Storage Secrets ConfigMaps Ingress Service Healthchecks  </description>
    </item>
    
    <item>
      <title>Namespaces</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/410_namespaces/</link>
      <pubDate>Sun, 09 Dec 2018 17:05:14 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/410_namespaces/</guid>
      <description> Namespaces  Namespaces  Namespaces are virtual clusters inside your Kubernetes cluster that provide logically isolation (kinda) from each other.
 Scope of names
 Organization of Kubernetes resources
  </description>
    </item>
    
    <item>
      <title>Pods</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/420_pods/</link>
      <pubDate>Sun, 09 Dec 2018 17:00:31 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/420_pods/</guid>
      <description>Pods  Pods are a collection of containers that share a namespace, are colocated and scheduled together on Kubenetes nodes.
 A pod is a group of one or more containers, with shared storage/network, and a specification for how to run the containers
  Pods Labels Labels are key/value pairs that are attached to objects, such as pods that help to identify that object.
Selectors Label Selectors help client/user identify a set of objects.</description>
    </item>
    
    <item>
      <title>Resource Quotas</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/430_rq/</link>
      <pubDate>Sun, 09 Dec 2018 17:00:31 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/430_rq/</guid>
      <description>Resource Quotas  Resource Quotas  Requests - How much does this pod need to run
 Limits - This pod only gets this much to run
  Kubernetes being a multi-tenant environment, some applications may hog resources and starve others, Resource Quotas discourage this behavior
Resources  CPU Memory Storage  requests.storage persistentvolumeclaims storage-class-name.storageclass.storage.k8s.io/requests.storage storage-class-name.storageclass.storage.k8s.io/persistentvolumeclaims   Resources  Object Count  configmaps persistentvolumeclaims pods replicationcontrollers resourcequotas services services.</description>
    </item>
    
    <item>
      <title>Controllers</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/440_controllers/</link>
      <pubDate>Sun, 09 Dec 2018 17:00:31 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/440_controllers/</guid>
      <description>Controllers In Kubernetes, a controller is a control loop that watches the shared state of the cluster through the apiserver and makes changes attempting to move the current state towards the desired state. There are several in the Kubernetes Architecture that support different functions in the system.
Namespace controller - Creates and updates the Namespaces in kubernetes
Serviceaccounts controller - Manages the service accounts in the system, which are for processes to interact with Kubernetes.</description>
    </item>
    
    <item>
      <title>Storage</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/450_storage/</link>
      <pubDate>Sun, 09 Dec 2018 17:00:31 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/450_storage/</guid>
      <description>Storage Storage Storage like compute is another resource that must be managed. Kubernetes offers 3 types of storage
 Volumes Persistent Volumes Persistent Volume Claims  The Ephemeral nature of pods and containers lead to the need for data to be have a decoupled lifecycle outside of containers and pods.
Storage Classes Storage classes allow cluster administrators to provide varing levels of support and types of storage to applications in a cluster</description>
    </item>
    
    <item>
      <title>Secrets</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/460_secrets/</link>
      <pubDate>Sun, 09 Dec 2018 17:05:14 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/460_secrets/</guid>
      <description> Secrets  Secrets Kubernetes object to inject sensitive data into containers
Sensitive data should never be built into the container image, in order to do that, kubernetes offers Secrets.
Secrets echo -n &#39;admin&#39; | base64 YWRtaW4= echo -n &#39;1f2d1e2e67df&#39; | base64 MWYyZDFlMmU2N2Rm  Write a Secret that looks like this:
apiVersion: v1 kind: Secret metadata: name: mysecret type: Opaque data: username: YWRtaW4= password: MWYyZDFlMmU2N2Rm  Secrets ENV apiVersion: v1 kind: Pod metadata: name: secret-env-pod spec: containers: - name: mycontainer image: redis env: - name: SECRET_USERNAME valueFrom: secretKeyRef: name: mysecret key: username - name: SECRET_PASSWORD valueFrom: secretKeyRef: name: mysecret key: password restartPolicy: Never  Secrets File apiVersion: v1 kind: Pod metadata: name: mypod spec: containers: - name: mypod image: redis volumeMounts: - name: foo mountPath: &amp;quot;/etc/foo&amp;quot; readOnly: true volumes: - name: foo secret: secretName: mysecret  </description>
    </item>
    
    <item>
      <title>Configmaps</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/470_config_maps/</link>
      <pubDate>Sun, 09 Dec 2018 17:05:14 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/470_config_maps/</guid>
      <description>What In order to keep the immutablity of a docker image, the configuration must live outside the container image, K8 config maps enable this.
Why Secrets, env variables, and other environment specific items should not be baked into a container image.
 1apiVersion: v1 2data: 3 game.properties: | 4enemies=aliens 5 lives=3 6 enemies.cheat=true 7 enemies.cheat.level=noGoodRotten 8 secret.code.passphrase=UUDDLRLRBABAS 9 secret.code.allowed=true 10 secret.code.lives=30 11 ui.properties: | 12color.good=purple 13 color.bad=yellow 14 allow.textmode=true 15 how.</description>
    </item>
    
    <item>
      <title>ingress</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/480_ingress/</link>
      <pubDate>Sun, 09 Dec 2018 17:05:14 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/480_ingress/</guid>
      <description>Ingress  Ingress Ingress is a K8 object that allows external access to resources inside the cluster
Services, Pods and other objects are only accessible inside the cluster
Ingress controllers In order for the ingress resource to work, the cluster must have an ingress controller running. This is unlike other types of controllers, which run as part of the kube-controller-manager binary, and are typically started automatically with a cluster. Choose the ingress controller implementation that best fits your cluster.</description>
    </item>
    
    <item>
      <title>Services</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/490_services/</link>
      <pubDate>Sun, 09 Dec 2018 17:00:31 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/490_services/</guid>
      <description>Services  Service Service: a named abstraction of software service, consisting of a port that the proxy listens on, and the selector that determines which pods will answer requests.
Pods come and go, and with that their IP address change rapidly. Services decouple the IP address from the application and serve as the IP address inside the cluster for an application running multiple pods.
More info here
Service  Application Deployment Create a secret for the password between Wordpress and MYSQL</description>
    </item>
    
    <item>
      <title>Healthchecks</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/493_healthchecks/</link>
      <pubDate>Sun, 09 Dec 2018 17:00:31 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/493_healthchecks/</guid>
      <description>Health Checks Health Checks Healthchecks inform that kubelet that pods are ready to accept traffic
The distributed nature of kubernetes allows pods to come and go for a number of reasons, and if many are running a application the kubelet needs to know what a &amp;ldquo;healthy&amp;rdquo; pod looks like.
Readiness and Liveliness Liveliness Liveliness checks inform the kubelet that the pod is running. If this check fails the kubelet will attempt to restart the pod.</description>
    </item>
    
    <item>
      <title>Daemonsets</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/495_daemonsets/</link>
      <pubDate>Sun, 09 Dec 2018 17:05:14 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/495_daemonsets/</guid>
      <description> Daemonsets  Daemonsets Specialized deployments that will deploy pods on every node in the cluster
 Running a cluster storage daemon, such as glusterd, ceph, on each node. Running a logs collection daemon on every node, such as fluentd or logstash. Running a node monitoring daemon on every node,  Prometheus Node Exporter collectd Dynatrace OneAgent AppDynamics Agent Datadog agent    </description>
    </item>
    
    <item>
      <title>Microservices Exercise</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/500_microservices/</link>
      <pubDate>Sun, 09 Dec 2018 17:21:05 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/500_microservices/</guid>
      <description>Microservice Example Git clone Micro Service Exercises</description>
    </item>
    
    <item>
      <title>Running</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/700_running/</link>
      <pubDate>Sun, 09 Dec 2018 17:11:44 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/700_running/</guid>
      <description> Running Kubernetes  GKP EKS AKS On prem  </description>
    </item>
    
    <item>
      <title>Extras</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/800_extras/</link>
      <pubDate>Sun, 09 Dec 2018 17:13:35 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/800_extras/</guid>
      <description> Extras  Monitoring Logging Security  </description>
    </item>
    
    <item>
      <title>Monitoring</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/801_monitoring/</link>
      <pubDate>Sun, 09 Dec 2018 17:13:55 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/801_monitoring/</guid>
      <description> Monitoring Monitoring  cAdvisor
 Prometheus
 Datadog
  </description>
    </item>
    
    <item>
      <title>Logging</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/802_logging/</link>
      <pubDate>Sun, 09 Dec 2018 17:13:55 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/802_logging/</guid>
      <description> Logging  kubectl logs Node level Cluster Level Side Car  Logging  kubectl logs  apiVersion: v1 kind: Pod metadata: name: counter spec: containers: - name: count image: busybox args: [/bin/sh, -c, &#39;i=0; while true; do echo &amp;quot;$i: $(date)&amp;quot;; i=$((i+1)); sleep 1; done&#39;]  $ kubectl logs counter 0: Mon Jan 1 00:00:00 UTC 2001 1: Mon Jan 1 00:00:01 UTC 2001 2: Mon Jan 1 00:00:02 UTC 2001  Node Level Side Car </description>
    </item>
    
    <item>
      <title>Security - Containers</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/806_security/</link>
      <pubDate>Sun, 09 Dec 2018 17:13:49 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/806_security/</guid>
      <description>Container security primitives  SElinux AppArmor Seccomp  Container Pipeline  Establish a pipeline to build a standard image Have a versioning policy Allow to only run images based of the standard image Use the same OS as the host Keep the image small Use a private registry Don’t embed secrets into images, use Hashicorp Vault https://www.cisecurity.org/benchmark/docker/ https://github.com/docker/docker-bench-security  K8 Security  RBAC NetworkPolicy TLS Image Scanning Aquasec/Twistlock Integrating with HashiCorp Vault other public cloud secret stores Investigate using a container based OS (CoreOS, Atomic Linux) Harden and tweak Make sure to pass https://github.</description>
    </item>
    
    <item>
      <title>Closing</title>
      <link>https://strongjz.github.io/louk8cnc-intro-k8s/home/900_closing/</link>
      <pubDate>Sun, 09 Dec 2018 17:13:09 -0500</pubDate>
      
      <guid>https://strongjz.github.io/louk8cnc-intro-k8s/home/900_closing/</guid>
      <description>Closing remarks Contact Me:
@strongjz
Email: james.strong@contino.io
contino.io</description>
    </item>
    
  </channel>
</rss>